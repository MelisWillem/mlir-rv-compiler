// RUN: cspl -i %S/simple_func.spl -o %t.mlir
// RUN: FileCheck --input-file=%t.mlir %s

// CHECK: module {
// CHECK:   func.func @foo(%arg0: !rvir.reg<11>, %arg1: !rvir.reg<12>) -> !rvir.reg<10> {
// CHECK:     %0 = "rvir.ADDI"() <{imm = 23 : i32}> : () -> !rvir.reg<4>
// CHECK:     %1 = "rvir.SLT"(%arg0, %0) : (!rvir.reg<11>, !rvir.reg<4>) -> !rvir.reg<4>
// CHECK:     %2 = "rvir.Const"() : () -> !rvir.reg<0>
// CHECK:     "rvir.BEQ"(%1, %2)[^bb2] : (!rvir.reg<4>, !rvir.reg<0>) -> ()
// CHECK:   ^bb1(%3: !rvir.reg<10>):  // pred: ^bb2
// CHECK:     return %3 : !rvir.reg<10>
// CHECK:   ^bb2:  // pred: ^bb0
// CHECK:     %4 = "rvir.Const"() : () -> !rvir.reg<0>
// CHECK:     "rvir.BEQ"(%arg1, %4)[^bb1] : (!rvir.reg<12>, !rvir.reg<0>) -> ()
// CHECK:   }
// CHECK: }
func foo(number: int, flag: bool) -> int{
    if number > 23 {
        return number;
    }

    if flag {
        return 1;
    }
    return -1;
}
